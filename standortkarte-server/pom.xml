<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ch.so.agi</groupId>
		<artifactId>standortkarte</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>standortkarte-server</artifactId>
	<!--<packaging>war</packaging> -->
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>standortkarte-shared</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- only needed if you are using GWT-RPC -->
		<!-- <dependency> <groupId>com.google.gwt</groupId> <artifactId>gwt-servlet</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- <exclusions> <exclusion> <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-starter-logging</artifactId> </exclusion> </exclusions> -->
		</dependency>
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-log4j2</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-graalvm-native</artifactId>
			<version>0.8.5</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>spring-milestone</id>
			<name>Spring milestone</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestone</id>
			<name>Spring milestone</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<!-- Name der finalen Jar-Datei. -->
		<!--<finalName>standortkarte</finalName> -->
		<plugins>
			<!-- Ohne Version werden die Tests nicht durchgeführt. In diesem Fall 
				wird eine älteren Version verwendet (2.12.x). Es ist noch unklar, ob das 
				nur der Fall ist, weil ich zuerst gar keine Tests hatte und dann das surefire 
				plugin direkt verwendete. Eventuell - bei vorhandenen Tests - hätte Spring 
				Boot selber die neuere Version heruntergeladen. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/${project.build.finalName}/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/public/</directory>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<!-- XXX: We want to exclude standortkarte-client from 'env-dev' profile, 
				Maven forces us to make a 'env-prod' profile -->
			<id>env-prod</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Das ist "build smell", weil das Entpacken vor dem Packen kommt. 
						Eclipse und Maven reklamiert auch. Siehe README.md -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>3.1.1</version>
						<executions>
							<execution>
								<id>unpack-gwt-war</id>
								<phase>compile</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>standortkarte-client</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/classes/public</outputDirectory>
											<includes>app/</includes>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>env-dev</id>
			<activation>
				<property>
					<name>env</name>
					<value>dev</value>
				</property>
			</activation>
		</profile>

		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>make-native-image-config-folder</id>
								<phase>test-compile</phase>
								<configuration>
									<tasks>
										<mkdir
											dir="${project.basedir}/target/classes/META-INF/native-image/" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.22.0</version>
						<configuration>
							<argLine>-Dorg.graalvm.nativeimage.imagecode=agent
								-Dspring.xml.ignore=true -Dspring.spel.ignore=true
								-agentlib:native-image-agent=access-filter-file=target/classes/access-filter.json,config-merge-dir=target/classes/META-INF/native-image</argLine>
							<!-- <includes> <include>**/ApplicationTests.java</include> </includes> -->
						</configuration>
					</plugin>
					<plugin>
						<!-- https://www.graalvm.org/reference-manual/native-image/NativeImageMavenPlugin/ 
							https://repo.spring.io/milestone/org/springframework/experimental/spring-graalvm-native-docs/0.8.5/spring-graalvm-native-docs-0.8.5.zip!/reference/index.html#options -->
						<groupId>org.graalvm.nativeimage</groupId>
						<artifactId>native-image-maven-plugin</artifactId>
						<version>20.3.0</version>
						<configuration>
							<mainClass>ch.so.agi.standortkarte.Application</mainClass>
							<buildArgs>-Dspring.native.remove-yaml-support=false
								-Dspring.spel.ignore=true</buildArgs>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>native-image</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
